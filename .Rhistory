formula = select ~ vulnerability + transmission + income + occupation + age_category,
cluster = "id",
type = mod_type)
})) %>%
select(-data) %>%
unnest(cols = coefs) %>% # combine all conjoint results into single table
results_tidy(.) %>% # apply some formatting
mutate(region = case_when( # add in region
country %in% c("Colombia","Brazil","Chile") ~ "South America",
country %in% c("Canada","US") ~ "North America",
country %in% c("Spain","UK","France","Italy") ~ "Europe",
country %in% c("China","Australia", "India","Uganda") ~ "Asia/Africa"
))
}
# Merge country-by-country results
for (mod_type in c("logit","ols")) {
base_plot(data = country_results[[mod_type]]) +
facet_grid(attribute~region, space = "free", scales = "free_y") +
aes(color = country) +
scale_color_manual(values=as.vector(polychrome(16)[3:16])) +
labs(x = "Estimate", y = "", color = "") +
scale_y_discrete(limits = rev(levels("term"))) +
guides(color=guide_legend(nrow = 2, byrow = TRUE)) +
theme(legend.position = "bottom") +
ggsave(paste0("figures/conjoint_combined_results_",mod_type,".pdf"),
width = 21, height = 29.7, unit = "cm", dpi = 300, scale = 1.5)
}
## Country-by-country combined results table
for (mod_type in c("logit","ols")) {
combined_caption <- paste0("Country ", ifelse(mod_type == "logit",
"Logistic ",
"Linear (OLS) "),
"Regression Results. The dependent variable is the Forced Choice decision. ",
"These are the estimates used to construct the conjoint plots presented in ",
"Figure ",ifelse(mod_type == "logit",
"\\ref{fig:priority_allocate}",
"\\ref{fig:combined_ols}"),
".")
global_data %>%
group_by(country) %>%
nest() %>% # by here, created separate data.frames for each country
mutate(coefs = map(data, # for each country, run conjoint model
function (x) {
clustered_mod(x,
formula = select ~ vulnerability + transmission + income + occupation + age_category,
cluster = "id",
type = mod_type)
})) %>%
select(-data) %>%
multi_table_make(., type = mod_type, textsize = "scriptsize",
filename = "tables/conjoint_combined_results",
header = list("Country Model" = 1:length(.$country)),
model_names = .$country, sideways = TRUE,
caption = combined_caption,
label = paste0("table:",mod_type,"1"))
}
#### 3. Heterogeneity Analysis ####
heterogeneity_results <- list()
het_age <- global_data %>%
filter(age > 17 & age < 120) %>%
mutate(age_bin = case_when(age < 40 ~ "18-39",
age < 60 ~ "40-59",
age < 120 ~ "60+")) %>%
group_by(age_bin)
het_inc <- global_data %>%
filter(!is.na(ind_inc)) %>%
group_by(ind_inc)
het_ideo <- global_data %>%
filter(!is.na(ideology)) %>%
mutate(ideo_bin = case_when(ideology <= 5 ~ "Left/Centre",
ideology > 5 ~ "Right")) %>%
group_by(ideo_bin)
het_gender <- global_data %>%
filter(!is.na(gender)) %>%
group_by(gender)
het_educ <- global_data %>%
filter(!is.na(education)) %>%
group_by(education)
het_hes <- global_data %>%
mutate(hesitancy = case_when(hes_covid_2 %in% c("Strongly agree","Agree") ~ "High",
hes_covid_2 %in% c("Strongly disagree","Disagree") ~ "Low",
hes_covid_2 == "Neither agree nor disagree" ~ "Moderate")) %>%
filter(!is.na(hesitancy)) %>%
group_by(hesitancy)
for (mod_type in c("logit","ols")) {
heterogeneity_results[[mod_type]] <- rbind(
analyse_het(het_age, mod_type = mod_type) %>%
rename(group = age_bin) %>%
mutate(covar = "Age",
group = paste0("Age: ",group)),
analyse_het(het_inc, mod_type = mod_type) %>%
rename(group = ind_inc) %>%
mutate(covar = "Income",
group = paste0("Income: ",group)),
analyse_het(het_ideo, mod_type = mod_type) %>%
rename(group = ideo_bin) %>%
mutate(covar = "Ideology",
group = paste0("Ideology: ",group)),
analyse_het(het_gender, mod_type = mod_type) %>%
rename(group = gender) %>%
mutate(covar = "Gender",
group = paste0("Gender: ",group)),
analyse_het(het_educ, mod_type = mod_type) %>%
rename(group = education) %>%
mutate(covar = "Education",
group = paste0("Education: ",group)),
analyse_het(het_hes, mod_type = mod_type) %>%
rename(group = hesitancy) %>%
mutate(covar = "COVID Hesitancy",
group = paste0("COVID Hesitancy: ",group))
)
}
# Plot all
het_groups <- c("Education","Gender","Ideology","Income","Age", "COVID Hesitancy")
for (mod_type in c("logit","ols")) {
het_plot_data <- heterogeneity_results[[mod_type]] %>%
mutate(group = factor(group,
levels = c("Age: 18-39","Age: 40-59","Age: 60+",
"COVID Hesitancy: Low","COVID Hesitancy: Moderate","COVID Hesitancy: High",
"Education: High","Education: Medium","Education: Low",
"Gender: Female","Gender: Male","Gender: Other",
"Ideology: Left/Centre","Ideology: Right",
"Income: Low","Income: High")))
het_plot(het_plot_data, c("Age","Ideology","Income"), mod_type)
het_plot(het_plot_data, c("COVID Hesitancy","Education","Gender"), mod_type)
}
# Heterogeneity tables
for (mod_type in c("logit","ols")) {
het_table(het_age, group_var = "age_bin",group_print = "Age",
mod_type = mod_type, model_order = c("18-39","40-59","60+"))
het_table(het_inc, group_var = "ind_inc",group_print = "Income",
mod_type = mod_type, model_order = c("Low","High"))
het_table(het_ideo, group_var = "ideo_bin",group_print = "Ideology",
mod_type = mod_type, model_order = c("Left/Centre","Right"))
het_table(het_gender, group_var = "gender",group_print = "Gender",
mod_type = mod_type, model_order = c("Female","Male","Other"))
het_table(het_educ, group_var = "education",group_print = "Education",
mod_type = mod_type, model_order = c("High","Medium","Low"))
het_table(het_hes, group_var = "hesitancy",group_print = "COVID-19 Vaccine Hesistancy",
mod_type = mod_type, model_order = c("High","Moderate","Low"))
}
#### 4. Summary statistic tables ####
## Randomisation
rand_tab <- global_data %>%
select("vulnerability", "transmission", "income", "occupation", "age_category") %>%
as.data.frame(.) %>%
dummy.data.frame(.)
vars <- colnames(rand_tab) %>%
gsub("vulnerability|transmission|occupation|age_category","",.) %>%
ifelse(str_starts(.,"income"), str_sub(.,7), .)
sum_conjoint <- data.frame(
`Conjoint attribute variable` = vars,
`Mean` = round(as.double(colMeans(rand_tab)),2),
`SD` = round(as.double(apply(rand_tab, 2, sd)),2),
`Min.` = 0,
`Max.` = 1,
`N` = as.character(as.numeric(colSums(rand_tab))),
check.names = FALSE
) %>%
xtable(.,
caption = "Combined Global Survey: Summary of Conjoint Attribute Randomisation",
label = "tab:randomisation",
digits = 2) %>%
print(.,
include.rownames = FALSE,
floating.environment = "sidewaystable",
file = "tables/summary_tab_randomisation.tex")
## Heterogeneity
summary_data <- global_data %>%
mutate(#ideology = ifelse(country == "China",0,ideology), # Prevent China being filtered out, as q. not asked
age_bin = case_when(age < 40 ~ "18-39",
age < 60 ~ "40-59",
age < 120 ~ "60+"),
ideo_bin = case_when(ideology <= 5 ~ "Left/Centre",
ideology > 5 ~ "Right"),
hesitancy = case_when(hes_covid_2 %in% c("Strongly agree","Agree") ~ "High",
hes_covid_2 %in% c("Strongly disagree","Disagree") ~ "Low",
hes_covid_2 == "Neither agree nor disagree" ~ "Moderate")
)
sumtab_1 <- cbind(
{summary_data %>% filter(age > 17 & age < 120) %>%
group_by(country) %>%
summarise(`18-39` = 100*sum(age_bin == "18-39", na.rm=TRUE)/n(),
`40-59` = 100*sum(age_bin == "40-59", na.rm=TRUE)/n(),
`60+` = 100*sum(age_bin == "60+", na.rm=TRUE)/n()) %>%
mutate(across(where(is.numeric), function (x) paste0(round(x,1),"%")))},
{summary_data %>% filter(!is.na(ideology) | country == "China") %>%
group_by(country) %>%
summarise(`Left/Centre` = 100*sum(ideo_bin == "Left/Centre",na.rm=TRUE)/n(),
Right = 100*sum(ideo_bin == "Right",na.rm=TRUE)/n()) %>%
mutate(across(where(is.numeric), function (x) paste0(round(x,1),"%"))) %>%
select(-country)},
{summary_data %>% filter(!is.na(ind_inc)) %>%
group_by(country) %>%
summarise(Inc_Low = 100*sum(ind_inc == "Low",na.rm=TRUE)/n(),
Inc_High = 100*sum(ind_inc == "High",na.rm=TRUE)/n()) %>%
mutate(across(where(is.numeric), function (x) paste0(round(x,1),"%"))) %>%
select(-country)}
) %>%
xtable(.) %>% print(only.contents = TRUE,
include.rownames = FALSE,
include.colnames = FALSE,
hline.after = c(nrow(.)),
file = "tables/summary_tab_age_ideo_inc.tex")
sumtab_2 <- cbind(
{summary_data %>% filter(!is.na(hesitancy)) %>%
group_by(country) %>%
summarise(Hes_Low = 100*sum(hesitancy == "Low",na.rm=TRUE)/n(),
Hes_Moderate = 100*sum(hesitancy == "Moderate",na.rm=TRUE)/n(),
Hes_High = 100*sum(hesitancy == "High",na.rm=TRUE)/n()) %>%
mutate(across(where(is.numeric), function (x) paste0(round(x,1),"%")))},
{summary_data %>% filter(!is.na(education)) %>%
group_by(country) %>%
summarise(Ed_Low = 100*sum(education == "Low",na.rm=TRUE)/n(),
Ed_Medium = 100*sum(education == "Medium",na.rm=TRUE)/n(),
Ed_High = 100*sum(education == "High",na.rm=TRUE)/n()) %>%
mutate(across(where(is.numeric), function (x) paste0(round(x,1),"%"))) %>%
select(-country)},
{summary_data %>% filter(!is.na(gender)) %>%
group_by(country) %>%
summarise(Female = 100*sum(gender == "Female", na.rm=TRUE)/n(),
Male = 100*sum(gender == "Male", na.rm=TRUE)/n(),
Other = 100*sum(gender == "Other", na.rm=TRUE)/n()) %>%
mutate(across(where(is.numeric), function (x) paste0(round(x,1),"%"))) %>%
select(-country)}
) %>%
xtable(.) %>% print(only.contents = TRUE,
include.rownames = FALSE,
include.colnames = FALSE,
hline.after = c(nrow(.)),
file = "tables/summary_tab_hes_edu_gen.tex")
#### 5. WTP analysis ####
# Willingness to pay
global_data %>%
select(id, country, wtp_access) %>%
distinct() %>%
group_by(country, wtp_access) %>%
summarise(count = n()) %>%
group_by(country) %>%
summarise(prop = count/sum(count),
perc = round(prop*100,0),
wtp_access = wtp_access) %>%
ggplot(aes(fill=wtp_access, x=country, y = prop)) +
geom_col(width = 0.7) +
geom_text(aes(label = perc), position = position_fill(vjust = 0.5), size = 7) +
labs(y = "Percentage of Respondents", x = "") +
scale_y_continuous(labels = scales::percent_format()) +
coord_flip() +
scale_fill_discrete(name="Mode of \nallocation",
breaks=c("Do not know",
"Vaccines are only available for private purchase",
"Vaccines made available by government but citizens can pay privately to gain access",
"Vaccines only made available by government at low or no cost",
"Prefer not to say"),
labels=c("Do not know",
"Private",
"Government + Private",
"Government",
"Prefer not to say")) +
theme_pubr() +
theme(legend.position="right",
text = element_text(size = 24)) +
ggsave("figures/willingness_to_pay.pdf", width = 13)
# Willingness to pay privately
global_data %>%
select(id, country, wtp_private) %>%
distinct() %>%
group_by(country, wtp_private) %>%
summarise(count = n()) %>%
group_by(country) %>%
summarise(prop = count/sum(count),
perc = round(prop*100,0),
wtp_private = wtp_private) %>%
ggplot(aes(fill=wtp_private, y=prop, x=country)) +
geom_bar(position = "fill", stat = "identity", width = .7) +
geom_text(aes(label = perc), position = position_fill(vjust = 0.5), size = 7) +
labs(y = "Percentage of Respondents", x = "") +
scale_y_continuous(labels = scales::percent_format())+
coord_flip() +
scale_fill_discrete(name="Willing to \npurchase a \nCOVID-19 vaccine \nfrom a private \nsupplier",
breaks=c("Do not know", "No", "Yes","Prefer not to say"),
labels=c("Do not know", "No", "Yes","Prefer not to say")) +
theme_pubr() +
theme(legend.position="right",
text = element_text(size = 24)) +
ggsave("figures/wtp_private.pdf", width = 13)
# Government mandated vaccine
global_data %>%
select(id, country, int_pol_implem_6) %>%
distinct() %>%
ggplot(aes(x = int_pol_implem_6, y = country, fill = country)) +
geom_density_ridges(scale = 3, size = 0.4, alpha = 0.7) +
scale_fill_manual(values=as.vector(polychrome(16)[3:16])) +
# scale_fill_gradientn(
#   colours = c("#0D0887FF", "#CC4678FF", "#F0F921FF"),
#   name = "",
#   breaks=c(0,100),labels=c("0 Very Much Disagree","100 Very Much Agree")
# ) +
labs(x = "Score (0 - 100)",
y = "")+
theme_pubr() +
theme(legend.position = "none",
legend.key.width = unit(4,"line"),
text = element_text(size = 24),
plot.title = element_text(hjust = 0.5)) +
ggsave("figures/distplot_final.pdf", width = 13, height = 9)
#### 6. Rename main text files ####
file.rename("figures/conjoint_combined_results_logit.pdf",
"figures/fig1.pdf")
file.rename("figures/conjoint_heterogeneity_age_ide_inc_logit.pdf",
"figures/fig2.pdf")
file.rename("figures/willingness_to_pay.pdf",
"figures/fig3a.pdf")
file.rename("figures/wtp_private.pdf",
"figures/fig3b.pdf")
file.rename("figures/distplot_final.pdf",
"figures/fig3c.pdf")
setwd("~/Dropbox/MIDASpy")
library(tidyverse)
df <- data.frame(x1 = runif(1000),
cat = sample(c("a","b"), 1000, replace = TRUE))
df$x2 <- 3*df$x1 + 1 + rnorm(1000)
ggplot(df, aes(x = x1, y = x2)) +
geom_point() +
geom_line()
?geom_line
ggplot(df, aes(x = x1, y = x2)) +
geom_point() +
geom_smooth()
ggplot(df, aes(x = x1, y = x2, color = cat)) +
geom_point() +
geom_smooth()
ggplot(df, aes(x = x1, y = x2)) +
geom_point() +
geom_smooth(aes(color = cat))
ggplot(df, aes(x = x1, y = x2)) +
geom_point(aes(color = cat)) +
geom_smooth()
# Creating a dataframe with the unemployment data
unemp <- read.csv("data/unemployment.csv", stringsAsFactors = FALSE)
# Creating a data frame with the background colour information
name <- c("Truman", "Eisenhower", "Kennedy", "Johnson", "Nixon",
"Ford", "Carter", "Reagan", "Bush I", "Clinton", "Bush II",
"Obama")
start <- as.Date(c("1948-01-01", "1953-01-20", "1961-01-20", "1963-11-22",
"1969-01-20", "1974-08-09", "1977-01-20", "1981-01-20",
"1989-01-20", "1993-01-20", "2001-01-20", "2009-01-20"))
end <- c(start[-1], as.Date("2016-10-01"))
party <- c("D", "R", "D", "D", "R", "R", "D", "R", "R", "D", "R", "D")
pres <- data.frame(name, start, end, party, stringsAsFactors=F)
library("tidyverse")
library("plotly")
library("scales")
View(unemp)
unemp$datetime <- dmy(unemp$date)
?lubridate
unemp$datetime <- ymd(unemp$date)
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line()
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line()
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(breaks = c(1960,1980,2000))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(breaks = c("1960","1980","2000"))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(breaks = c("1960-01-01","1980-01-01","2000-01-01"))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_datetime(breaks = c("1960-01-01","1980-01-01","2000-01-01"))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_datetime(date_breaks = c("1960-01-01","1980-01-01","2000-01-01"))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_continuous(date_breaks = c(1960,1980,2000))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_continuous(breaks = c(1960,1980,2000))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$date))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
?scale_x_date
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0)) +
labs(x = "", y = "Unemployment Rate")
unemp_plot <- ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0)) +
labs(x = "", y = "Unemployment Rate")
unemp_plot <- ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
View(pres)
?geom_rect
unemp_plot +
geom_rect(data = pres, aes(xmin = start, xmax = end, fill = pres))
unemp_plot +
geom_rect(data = pres, aes(xmin = start, xmax = end, fill = party))
unemp_plot +
geom_rect(data = pres, aes(xmin = start, xmax = end, fill = party))
unemp_plot <- ggplot(unemp, aes(x = datetime, y = unemp)) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
unemp_plot <- ggplot(unemp) +
geom_line() +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
unemp_plot <- ggplot(unemp) +
geom_line(aes(x = datetime, y = unemp)) +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
unemp_plot +
geom_rect(data = pres, aes(xmin = start, xmax = end, fill = party))
unemp_plot +
geom_rect(data = pres,aes(xmin = start, xmax = end, fill = party),
ymin = range(unemp$unemp[1]), range(unemp$unemp[2]))
unemp_plot +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05)
yrng = range(unemp$unemp)
unemp_plot +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05)
unemp_plot +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05)
unemp_plot +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05) +
scale_fill_manual(values = c("red","blue"))
unemp_plot +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05) +
scale_fill_manual(values = c("blue","red"))
unemp_plot +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05,
alpha = 0.2) +
scale_fill_manual(values = c("blue","red"))
p0 <- ggplot(unemp) +
geom_line(aes(x = datetime, y = unemp)) +
scale_x_date(limits = range(unemp$datetime), expand = c(0,0))
p1 <- p0 +
geom_rect(data=pres,
aes(xmin=start, xmax=end,
fill=party),
ymin=yrng[1]-0.05, ymax=yrng[2]+0.05,
alpha = 0.2) +
scale_fill_manual(values = c("blue","red"))
?geom_text
p1 +
geom_text(data = pres, aes(x = start, label = name))
p1 +
geom_text(data = pres, aes(x = start, label = name),
y = 0.12)
p1 +
geom_text(data = pres, aes(x = start, label = name),
y = 0.12, color = "black")
p1 +
geom_text(data = pres, aes(x = start, label = name),
y = 0.12, color = "black",
size=3, hjust=0.25, vjust=1.25, angle=90)
p1 +
geom_text(data=pres,
aes(x=start, y=yrng[2], label=name),
size=3, hjust=0.25, vjust=1.25, angle=90)
p1 +
geom_text(data=pres,
aes(x=start, y=yrng[2], label=name),
size=3, hjust=0.25, vjust=1.25, angle=90)
p1 +
geom_text(data=pres,
aes(x=start, y=yrng[2], label=name),
size=3, hjust=0.25, vjust=1.25, angle=90) +
geom_vline(type = "dashed", width = 2, color = "grey30", data = pres, aes(xintercept = start))
p1 +
geom_text(data=pres,
aes(x=start, y=yrng[2], label=name),
size=3, hjust=0.25, vjust=1.25, angle=90) +
geom_vline(linetype = "dashed", width = 2, color = "grey30", data = pres, aes(xintercept = start))
df <- read.csv("data/fb-congress-data.csv", stringsAsFactors = FALSE)
# Transform date column to datetime
df$date <- as_date(df$date)
# Dropping some very uncommon post types
nrow(df)
df <- df %>%
filter(!post_type %in% c("music", "note"))
nrow(df)
